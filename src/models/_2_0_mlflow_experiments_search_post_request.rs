/*
 * Mlflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.11.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Model20MlflowExperimentsSearchPostRequest {
    /// Maximum number of experiments desired. Servers may select a desired default `max_results` value. All servers are guaranteed to support a `max_results` threshold of at least 1,000 but may support more. Callers of this endpoint are encouraged to pass max_results explicitly and leverage page_token to iterate through experiments.
    #[serde(rename = "max_results", skip_serializing_if = "Option::is_none")]
    pub max_results: Option<i64>,
    /// Token indicating the page of experiments to fetch
    #[serde(rename = "page_token", skip_serializing_if = "Option::is_none")]
    pub page_token: Option<String>,
    /// A filter expression over experiment attributes and tags that allows returning a subset of experiments. The syntax is a subset of SQL that supports ANDing together binary operations between an attribute or tag, and a constant.  Example: ``name LIKE 'test-%' AND tags.key = 'value'``  You can select columns with special characters (hyphen, space, period, etc.) by using double quotes or backticks.  Example: ``tags.\"extra-key\" = 'value'`` or ``tags.`extra-key` = 'value'``  Supported operators are ``=``, ``!=``, ``LIKE``, and ``ILIKE``.
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<String>,
    /// List of columns for ordering search results, which can include experiment name and id with an optional \"DESC\" or \"ASC\" annotation, where \"ASC\" is the default. Tiebreaks are done by experiment id DESC.
    #[serde(rename = "order_by", skip_serializing_if = "Option::is_none")]
    pub order_by: Option<Vec<String>>,
    #[serde(rename = "view_type", skip_serializing_if = "Option::is_none")]
    pub view_type: Option<models::Mlflowviewtype>,
}

impl Model20MlflowExperimentsSearchPostRequest {
    pub fn new() -> Model20MlflowExperimentsSearchPostRequest {
        Model20MlflowExperimentsSearchPostRequest {
            max_results: None,
            page_token: None,
            filter: None,
            order_by: None,
            view_type: None,
        }
    }
}

