/*
 * Mlflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.11.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Model20MlflowRunsCreatePostRequest {
    /// ID of the associated experiment.
    #[serde(rename = "experiment_id", skip_serializing_if = "Option::is_none")]
    pub experiment_id: Option<String>,
    /// ID of the user executing the run. This field is deprecated as of MLflow 1.0, and will be removed in a future MLflow release. Use 'mlflow.user' tag instead.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// Name of the run.
    #[serde(rename = "run_name", skip_serializing_if = "Option::is_none")]
    pub run_name: Option<String>,
    /// Unix timestamp in milliseconds of when the run started.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i64>,
    /// Additional metadata for run.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<models::Mlflowruntag>>,
}

impl Model20MlflowRunsCreatePostRequest {
    pub fn new() -> Model20MlflowRunsCreatePostRequest {
        Model20MlflowRunsCreatePostRequest {
            experiment_id: None,
            user_id: None,
            run_name: None,
            start_time: None,
            tags: None,
        }
    }
}

