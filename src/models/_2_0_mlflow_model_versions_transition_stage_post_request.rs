/*
 * Mlflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.11.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Model20MlflowModelVersionsTransitionStagePostRequest {
    /// Name of the registered model This field is required.
    #[serde(rename = "name")]
    pub name: String,
    /// Model version number This field is required.
    #[serde(rename = "version")]
    pub version: String,
    /// Transition `model_version` to new stage. This field is required.
    #[serde(rename = "stage")]
    pub stage: String,
    /// When transitioning a model version to a particular stage, this flag dictates whether all existing model versions in that stage should be atomically moved to the \"archived\" stage. This ensures that at-most-one model version exists in the target stage. This field is *required* when transitioning a model versions's stage This field is required.
    #[serde(rename = "archive_existing_versions")]
    pub archive_existing_versions: bool,
}

impl Model20MlflowModelVersionsTransitionStagePostRequest {
    pub fn new(name: String, version: String, stage: String, archive_existing_versions: bool) -> Model20MlflowModelVersionsTransitionStagePostRequest {
        Model20MlflowModelVersionsTransitionStagePostRequest {
            name,
            version,
            stage,
            archive_existing_versions,
        }
    }
}

