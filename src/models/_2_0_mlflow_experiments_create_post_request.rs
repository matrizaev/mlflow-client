/*
 * Mlflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.11.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Model20MlflowExperimentsCreatePostRequest {
    /// Experiment name. This field is required.
    #[serde(rename = "name")]
    pub name: String,
    /// Location where all artifacts for the experiment are stored. If not provided, the remote server will select an appropriate default.
    #[serde(rename = "artifact_location", skip_serializing_if = "Option::is_none")]
    pub artifact_location: Option<String>,
    /// A collection of tags to set on the experiment. Maximum tag size and number of tags per request depends on the storage backend. All storage backends are guaranteed to support tag keys up to 250 bytes in size and tag values up to 5000 bytes in size. All storage backends are also guaranteed to support up to 20 tags per request.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<models::Mlflowexperimenttag>>,
}

impl Model20MlflowExperimentsCreatePostRequest {
    pub fn new(name: String) -> Model20MlflowExperimentsCreatePostRequest {
        Model20MlflowExperimentsCreatePostRequest {
            name,
            artifact_location: None,
            tags: None,
        }
    }
}

