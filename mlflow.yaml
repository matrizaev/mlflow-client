openapi: 3.0.3
info:
  title: Mlflow
  version: v2.11.3
servers:
- url: http://localhost:5000/api
paths:
  /2.0/mlflow/experiments/create:
    post:
      operationId: mlflowservicecreateexperiment
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Experiment name. This field is required.
                artifact_location:
                  type: string
                  description: Location where all artifacts for the experiment are
                    stored. If not provided, the remote server will select an appropriate
                    default.
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowexperimenttag'
                  description: A collection of tags to set on the experiment. Maximum
                    tag size and number of tags per request depends on the storage
                    backend. All storage backends are guaranteed to support tag keys
                    up to 250 bytes in size and tag values up to 5000 bytes in size.
                    All storage backends are also guaranteed to support up to 20 tags
                    per request.
              required:
              - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment_id:
                    type: string
                    description: Unique identifier for the experiment.
  /2.0/mlflow/experiments/search:
    post:
      operationId: mlflowservicesearchexperiments
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                max_results:
                  type: integer
                  format: int64
                  description: Maximum number of experiments desired. Servers may
                    select a desired default `max_results` value. All servers are
                    guaranteed to support a `max_results` threshold of at least 1,000
                    but may support more. Callers of this endpoint are encouraged
                    to pass max_results explicitly and leverage page_token to iterate
                    through experiments.
                page_token:
                  type: string
                  description: Token indicating the page of experiments to fetch
                filter:
                  type: string
                  description: 'A filter expression over experiment attributes and
                    tags that allows returning a subset of experiments. The syntax
                    is a subset of SQL that supports ANDing together binary operations
                    between an attribute or tag, and a constant.  Example: ``name
                    LIKE ''test-%'' AND tags.key = ''value''``  You can select columns
                    with special characters (hyphen, space, period, etc.) by using
                    double quotes or backticks.  Example: ``tags."extra-key" = ''value''``
                    or ``tags.`extra-key` = ''value''``  Supported operators are ``=``,
                    ``!=``, ``LIKE``, and ``ILIKE``.'
                order_by:
                  type: array
                  items:
                    type: string
                  description: List of columns for ordering search results, which
                    can include experiment name and id with an optional "DESC" or
                    "ASC" annotation, where "ASC" is the default. Tiebreaks are done
                    by experiment id DESC.
                view_type:
                  $ref: '#/components/schemas/mlflowviewtype'
                  description: Qualifier for type of experiments to be returned. If
                    unspecified, return only active experiments.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiments:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowexperiment'
                    description: Experiments that match the search criteria
                  next_page_token:
                    type: string
                    description: Token that can be used to retrieve the next page
                      of experiments. An empty token means that no more experiments
                      are available for retrieval.
  /2.0/mlflow/experiments/get:
    get:
      operationId: mlflowservicegetexperiment
      parameters:
      - in: query
        name: experiment_id
        schema:
          type: string
        required: true
        description: ID of the associated experiment. This field is required.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment:
                    $ref: '#/components/schemas/mlflowexperiment'
                    description: Experiment details.
  /2.0/mlflow/experiments/get-by-name:
    get:
      operationId: mlflowservicegetexperimentbyname
      parameters:
      - in: query
        name: experiment_name
        schema:
          type: string
        required: true
        description: Name of the associated experiment. This field is required.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment:
                    $ref: '#/components/schemas/mlflowexperiment'
                    description: Experiment details.
  /2.0/mlflow/experiments/delete:
    post:
      operationId: mlflowservicedeleteexperiment
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                  description: ID of the associated experiment. This field is required.
              required:
              - experiment_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/experiments/restore:
    post:
      operationId: mlflowservicerestoreexperiment
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                  description: ID of the associated experiment. This field is required.
              required:
              - experiment_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/experiments/update:
    post:
      operationId: mlflowserviceupdateexperiment
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                  description: ID of the associated experiment. This field is required.
                new_name:
                  type: string
                  description: If provided, the experiment's name is changed to the
                    new name. The new name must be unique.
              required:
              - experiment_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/create:
    post:
      operationId: mlflowservicecreaterun
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                  description: ID of the associated experiment.
                user_id:
                  type: string
                  description: ID of the user executing the run. This field is deprecated
                    as of MLflow 1.0, and will be removed in a future MLflow release.
                    Use 'mlflow.user' tag instead.
                run_name:
                  type: string
                  description: Name of the run.
                start_time:
                  type: integer
                  format: int64
                  description: Unix timestamp in milliseconds of when the run started.
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowruntag'
                  description: Additional metadata for run.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  run:
                    $ref: '#/components/schemas/mlflowrun'
                    description: The newly created run.
  /2.0/mlflow/runs/delete:
    post:
      operationId: mlflowservicedeleterun
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to delete. This field is required.
              required:
              - run_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/restore:
    post:
      operationId: mlflowservicerestorerun
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to restore. This field is required.
              required:
              - run_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/get:
    get:
      operationId: mlflowservicegetrun
      parameters:
      - in: query
        name: run_id
        schema:
          type: string
        required: false
        description: ID of the run to fetch. Must be provided.
      - in: query
        name: run_uuid
        schema:
          type: string
        required: false
        description: '[Deprecated, use run_id instead] ID of the run to fetch. This
          field will be removed in a future MLflow version.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  run:
                    $ref: '#/components/schemas/mlflowrun'
                    description: Run metadata (name, start time, etc) and data (metrics,
                      params, and tags).
  /2.0/mlflow/runs/log-metric:
    post:
      operationId: mlflowservicelogmetric
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run under which to log the metric. Must be
                    provided.
                run_uuid:
                  type: string
                  description: '[Deprecated, use run_id instead] ID of the run under
                    which to log the metric. This field will be removed in a future
                    MLflow version.'
                key:
                  type: string
                  description: Name of the metric. This field is required.
                value:
                  type: number
                  description: Double value of the metric being logged. This field
                    is required.
                timestamp:
                  type: integer
                  format: int64
                  description: Unix timestamp in milliseconds at the time metric was
                    logged. This field is required.
                step:
                  type: integer
                  format: int64
                  description: Step at which to log the metric
              required:
              - key
              - value
              - timestamp
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/log-batch:
    post:
      operationId: mlflowservicelogbatch
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to log under
                metrics:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowmetric'
                  description: Metrics to log. A single request can contain up to
                    1000 metrics, and up to 1000 metrics, params, and tags in total.
                params:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowparam'
                  description: Params to log. A single request can contain up to 100
                    params, and up to 1000 metrics, params, and tags in total.
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowruntag'
                  description: Tags to log. A single request can contain up to 100
                    tags, and up to 1000 metrics, params, and tags in total.
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/log-model:
    post:
      operationId: mlflowservicelogmodel
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to log under
                model_json:
                  type: string
                  description: MLmodel file in json format.
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/log-inputs:
    post:
      operationId: mlflowserviceloginputs
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to log under This field is required.
                datasets:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowdatasetinput'
                  description: Dataset inputs
              required:
              - run_id
      responses:
        '200':
          description: OK
  /2.0/mlflow/experiments/set-experiment-tag:
    post:
      operationId: mlflowservicesetexperimenttag
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                  description: ID of the experiment under which to log the tag. Must
                    be provided. This field is required.
                key:
                  type: string
                  description: Name of the tag. Maximum size depends on storage backend.
                    All storage backends are guaranteed to support key values up to
                    250 bytes in size. This field is required.
                value:
                  type: string
                  description: String value of the tag being logged. Maximum size
                    depends on storage backend. All storage backends are guaranteed
                    to support key values up to 5000 bytes in size. This field is
                    required.
              required:
              - experiment_id
              - key
              - value
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/set-tag:
    post:
      operationId: mlflowservicesettag
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run under which to log the tag. Must be provided.
                run_uuid:
                  type: string
                  description: '[Deprecated, use run_id instead] ID of the run under
                    which to log the tag. This field will be removed in a future MLflow
                    version.'
                key:
                  type: string
                  description: Name of the tag. Maximum size depends on storage backend.
                    All storage backends are guaranteed to support key values up to
                    250 bytes in size. This field is required.
                value:
                  type: string
                  description: String value of the tag being logged. Maximum size
                    depends on storage backend. All storage backends are guaranteed
                    to support key values up to 5000 bytes in size. This field is
                    required.
              required:
              - key
              - value
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/delete-tag:
    post:
      operationId: mlflowservicedeletetag
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run that the tag was logged under. Must be
                    provided. This field is required.
                key:
                  type: string
                  description: Name of the tag. Maximum size is 255 bytes. Must be
                    provided. This field is required.
              required:
              - run_id
              - key
      responses:
        '200':
          description: OK
  /2.0/mlflow/runs/log-parameter:
    post:
      operationId: mlflowservicelogparam
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run under which to log the param. Must be
                    provided.
                run_uuid:
                  type: string
                  description: '[Deprecated, use run_id instead] ID of the run under
                    which to log the param. This field will be removed in a future
                    MLflow version.'
                key:
                  type: string
                  description: Name of the param. Maximum size is 255 bytes. This
                    field is required.
                value:
                  type: string
                  description: String value of the param being logged. Maximum size
                    is 500 bytes. This field is required.
              required:
              - key
              - value
      responses:
        '200':
          description: OK
  /2.0/mlflow/metrics/get-history:
    get:
      operationId: mlflowservicegetmetrichistory
      parameters:
      - in: query
        name: run_id
        schema:
          type: string
        required: false
        description: ID of the run from which to fetch metric values. Must be provided.
      - in: query
        name: run_uuid
        schema:
          type: string
        required: false
        description: '[Deprecated, use run_id instead] ID of the run from which to
          fetch metric values. This field will be removed in a future MLflow version.'
      - in: query
        name: metric_key
        schema:
          type: string
        required: true
        description: Name of the metric. This field is required.
      - in: query
        name: page_token
        schema:
          type: string
        required: false
        description: Token indicating the page of metric history to fetch
      - in: query
        name: max_results
        schema:
          type: integer
          format: int32
        required: false
        description: Maximum number of logged instances of a metric for a run to return
          per call. Backend servers may restrict the value of `max_results` depending
          on performance requirements. Requests that do not specify this value will
          behave as non-paginated queries where all metric history values for a given
          metric within a run are returned in a single response.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowmetric'
                    description: All logged values for this metric.
                  next_page_token:
                    type: string
                    description: Token that can be used to issue a query for the next
                      page of metric history values. A missing token indicates that
                      no additional metrics are available to fetch.
  /2.0/mlflow/runs/search:
    post:
      operationId: mlflowservicesearchruns
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_ids:
                  type: array
                  items:
                    type: string
                  description: List of experiment IDs to search over.
                filter:
                  type: string
                  description: 'A filter expression over params, metrics, and tags,
                    that allows returning a subset of runs. The syntax is a subset
                    of SQL that supports ANDing together binary operations between
                    a param, metric, or tag and a constant.  Example: ``metrics.rmse
                    < 1 and params.model_class = ''LogisticRegression''``  You can
                    select columns with special characters (hyphen, space, period,
                    etc.) by using double quotes: ``metrics."model class" = ''LinearRegression''
                    and tags."user-name" = ''Tomas''``  Supported operators are ``=``,
                    ``!=``, ``>``, ``>=``, ``<``, and ``<=``.'
                run_view_type:
                  $ref: '#/components/schemas/mlflowviewtype'
                  description: Whether to display only active, only deleted, or all
                    runs. Defaults to only active runs.
                max_results:
                  type: integer
                  format: int32
                  description: Maximum number of runs desired. If unspecified, defaults
                    to 1000. All servers are guaranteed to support a `max_results`
                    threshold of at least 50,000 but may support more. Callers of
                    this endpoint are encouraged to pass max_results explicitly and
                    leverage page_token to iterate through experiments.
                order_by:
                  type: array
                  items:
                    type: string
                  description: 'List of columns to be ordered by, including attributes,
                    params, metrics, and tags with an optional "DESC" or "ASC" annotation,
                    where "ASC" is the default. Example: ["params.input DESC", "metrics.alpha
                    ASC", "metrics.rmse"] Tiebreaks are done by start_time DESC followed
                    by run_id for runs with the same start time (and this is the default
                    ordering criterion if order_by is not provided).'
                page_token:
                  type: string
                  description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowrun'
                    description: Runs that match the search criteria.
                  next_page_token:
                    type: string
                    description: ''
  /2.0/mlflow/artifacts/list:
    get:
      operationId: mlflowservicelistartifacts
      parameters:
      - in: query
        name: run_id
        schema:
          type: string
        required: false
        description: ID of the run whose artifacts to list. Must be provided.
      - in: query
        name: run_uuid
        schema:
          type: string
        required: false
        description: '[Deprecated, use run_id instead] ID of the run whose artifacts
          to list. This field will be removed in a future MLflow version.'
      - in: query
        name: path
        schema:
          type: string
        required: false
        description: Filter artifacts matching this path (a relative path from the
          root artifact directory).
      - in: query
        name: page_token
        schema:
          type: string
        required: false
        description: Token indicating the page of artifact results to fetch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  root_uri:
                    type: string
                    description: Root artifact directory for the run.
                  files:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowfileinfo'
                    description: File location and metadata for artifacts.
                  next_page_token:
                    type: string
                    description: Token that can be used to retrieve the next page
                      of artifact results
  /2.0/mlflow/runs/update:
    post:
      operationId: mlflowserviceupdaterun
      requestBody:
        required: false
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                  description: ID of the run to update. Must be provided.
                run_uuid:
                  type: string
                  description: '[Deprecated, use run_id instead] ID of the run to
                    update.. This field will be removed in a future MLflow version.'
                status:
                  $ref: '#/components/schemas/mlflowrunstatus'
                  description: Updated status of the run.
                end_time:
                  type: integer
                  format: int64
                  description: Unix timestamp in milliseconds of when the run ended.
                run_name:
                  type: string
                  description: Updated name of the run.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  run_info:
                    $ref: '#/components/schemas/mlflowruninfo'
                    description: Updated metadata of the run.
  /2.0/mlflow/registered-models/create:
    post:
      operationId: modelregistryservicecreateregisteredmodel
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Register models under this name This field is required.
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowregisteredmodeltag'
                  description: Additional metadata for registered model.
                description:
                  type: string
                  description: Optional description for registered model.
              required:
              - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    $ref: '#/components/schemas/mlflowregisteredmodel'
                    description: ''
  /2.0/mlflow/registered-models/get:
    get:
      operationId: modelregistryservicegetregisteredmodel
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Registered model unique name identifier. This field is required.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    $ref: '#/components/schemas/mlflowregisteredmodel'
                    description: ''
  /2.0/mlflow/registered-models/rename:
    post:
      operationId: modelregistryservicerenameregisteredmodel
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Registered model unique name identifier. This field
                    is required.
                new_name:
                  type: string
                  description: If provided, updates the name for this ``registered_model``.
              required:
              - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    $ref: '#/components/schemas/mlflowregisteredmodel'
                    description: ''
  /2.0/mlflow/registered-models/update:
    patch:
      operationId: modelregistryserviceupdateregisteredmodel
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Registered model unique name identifier. This field is required.
      - in: query
        name: description
        schema:
          type: string
        required: false
        description: If provided, updates the description for this ``registered_model``.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    $ref: '#/components/schemas/mlflowregisteredmodel'
                    description: ''
  /2.0/mlflow/registered-models/delete:
    delete:
      operationId: modelregistryservicedeleteregisteredmodel
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Registered model unique name identifier. This field is required.
      responses:
        '200':
          description: OK
  /2.0/mlflow/registered-models/get-latest-versions:
    post:
      operationId: modelregistryservicegetlatestversions
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Registered model unique name identifier. This field
                    is required.
                stages:
                  type: array
                  items:
                    type: string
                  description: List of stages.
              required:
              - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowmodelversion'
                    description: Latest version models for each requests stage. Only
                      return models with current ``READY`` status. If no ``stages``
                      provided, returns the latest version for each stage, including
                      ``"None"``.
  /2.0/mlflow/model-versions/create:
    post:
      operationId: modelregistryservicecreatemodelversion
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Register model under this name This field is required.
                source:
                  type: string
                  description: URI indicating the location of the model artifacts.
                    This field is required.
                run_id:
                  type: string
                  description: MLflow run ID for correlation, if ``source`` was generated
                    by an experiment run in MLflow tracking server
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/mlflowmodelversiontag'
                  description: Additional metadata for model version.
                run_link:
                  type: string
                  description: MLflow run link - this is the exact link of the run
                    that generated this model version, potentially hosted at another
                    instance of MLflow.
                description:
                  type: string
                  description: Optional description for model version.
              required:
              - name
              - source
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    $ref: '#/components/schemas/mlflowmodelversion'
                    description: Return new version number generated for this model
                      in registry.
  /2.0/mlflow/model-versions/get:
    get:
      operationId: modelregistryservicegetmodelversion
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model This field is required.
      - in: query
        name: version
        schema:
          type: string
        required: true
        description: Model version number This field is required.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    $ref: '#/components/schemas/mlflowmodelversion'
                    description: ''
  /2.0/mlflow/model-versions/update:
    patch:
      operationId: modelregistryserviceupdatemodelversion
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model This field is required.
      - in: query
        name: version
        schema:
          type: string
        required: true
        description: Model version number This field is required.
      - in: query
        name: description
        schema:
          type: string
        required: false
        description: If provided, updates the description for this ``registered_model``.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    $ref: '#/components/schemas/mlflowmodelversion'
                    description: Return new version number generated for this model
                      in registry.
  /2.0/mlflow/model-versions/delete:
    delete:
      operationId: modelregistryservicedeletemodelversion
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model This field is required.
      - in: query
        name: version
        schema:
          type: string
        required: true
        description: Model version number This field is required.
      responses:
        '200':
          description: OK
  /2.0/mlflow/model-versions/search:
    get:
      operationId: modelregistryservicesearchmodelversions
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: String filter condition, like "name='my-model-name'". Must be
          a single boolean condition, with string values wrapped in single quotes.
      - in: query
        name: max_results
        schema:
          type: integer
          format: int64
        required: false
        description: Maximum number of models desired. Max threshold is 200K. Backends
          may choose a lower default value and maximum threshold.
      - in: query
        name: order_by
        schema:
          type: array
          items:
            type: string
        required: false
        description: List of columns to be ordered by including model name, version,
          stage with an optional "DESC" or "ASC" annotation, where "ASC" is the default.
          Tiebreaks are done by latest stage transition timestamp, followed by name
          ASC, followed by version DESC.
      - in: query
        name: page_token
        schema:
          type: string
        required: false
        description: Pagination token to go to next page based on previous search
          query.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowmodelversion'
                    description: Models that match the search criteria
                  next_page_token:
                    type: string
                    description: Pagination token to request next page of models for
                      the same search query.
  /2.0/mlflow/model-versions/get-download-uri:
    get:
      operationId: modelregistryservicegetmodelversiondownloaduri
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model This field is required.
      - in: query
        name: version
        schema:
          type: string
        required: true
        description: Model version number This field is required.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  artifact_uri:
                    type: string
                    description: URI corresponding to where artifacts for this model
                      version are stored.
  /2.0/mlflow/model-versions/transition-stage:
    post:
      operationId: modelregistryservicetransitionmodelversionstage
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the registered model This field is required.
                version:
                  type: string
                  description: Model version number This field is required.
                stage:
                  type: string
                  description: Transition `model_version` to new stage. This field
                    is required.
                archive_existing_versions:
                  type: boolean
                  description: When transitioning a model version to a particular
                    stage, this flag dictates whether all existing model versions
                    in that stage should be atomically moved to the "archived" stage.
                    This ensures that at-most-one model version exists in the target
                    stage. This field is *required* when transitioning a model versions's
                    stage This field is required.
              required:
              - name
              - version
              - stage
              - archive_existing_versions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    $ref: '#/components/schemas/mlflowmodelversion'
                    description: Updated model version
  /2.0/mlflow/registered-models/search:
    get:
      operationId: modelregistryservicesearchregisteredmodels
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: String filter condition, like "name LIKE 'my-model-name'". Interpreted
          in the backend automatically as "name LIKE '%my-model-name%'". Single boolean
          condition, with string values wrapped in single quotes.
      - in: query
        name: max_results
        schema:
          type: integer
          format: int64
        required: false
        description: Maximum number of models desired. Default is 100. Max threshold
          is 1000.
      - in: query
        name: order_by
        schema:
          type: array
          items:
            type: string
        required: false
        description: List of columns for ordering search results, which can include
          model name and last updated timestamp with an optional "DESC" or "ASC" annotation,
          where "ASC" is the default. Tiebreaks are done by model name ASC.
      - in: query
        name: page_token
        schema:
          type: string
        required: false
        description: Pagination token to go to the next page based on a previous search
          query.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_models:
                    type: array
                    items:
                      $ref: '#/components/schemas/mlflowregisteredmodel'
                    description: Registered Models that match the search criteria.
                  next_page_token:
                    type: string
                    description: Pagination token to request the next page of models.
  /2.0/mlflow/registered-models/set-tag:
    post:
      operationId: modelregistryservicesetregisteredmodeltag
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Unique name of the model. This field is required.
                key:
                  type: string
                  description: Name of the tag. Maximum size depends on storage backend.
                    If a tag with this name already exists, its preexisting value
                    will be replaced by the specified `value`. All storage backends
                    are guaranteed to support key values up to 250 bytes in size.
                    This field is required.
                value:
                  type: string
                  description: String value of the tag being logged. Maximum size
                    depends on storage backend. This field is required.
              required:
              - name
              - key
              - value
      responses:
        '200':
          description: OK
  /2.0/mlflow/model-versions/set-tag:
    post:
      operationId: modelregistryservicesetmodelversiontag
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Unique name of the model. This field is required.
                version:
                  type: string
                  description: Model version number. This field is required.
                key:
                  type: string
                  description: Name of the tag. Maximum size depends on storage backend.
                    If a tag with this name already exists, its preexisting value
                    will be replaced by the specified `value`. All storage backends
                    are guaranteed to support key values up to 250 bytes in size.
                    This field is required.
                value:
                  type: string
                  description: String value of the tag being logged. Maximum size
                    depends on storage backend. This field is required.
              required:
              - name
              - version
              - key
              - value
      responses:
        '200':
          description: OK
  /2.0/mlflow/registered-models/delete-tag:
    delete:
      operationId: modelregistryservicedeleteregisteredmodeltag
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model that the tag was logged under. This
          field is required.
      - in: query
        name: key
        schema:
          type: string
        required: true
        description: Name of the tag. The name must be an exact match; wild-card deletion
          is not supported. Maximum size is 250 bytes. This field is required.
      responses:
        '200':
          description: OK
  /2.0/mlflow/model-versions/delete-tag:
    delete:
      operationId: modelregistryservicedeletemodelversiontag
      parameters:
      - in: query
        name: name
        schema:
          type: string
        required: true
        description: Name of the registered model that the tag was logged under. This
          field is required.
      - in: query
        name: version
        schema:
          type: string
        required: true
        description: Model version number that the tag was logged under. This field
          is required.
      - in: query
        name: key
        schema:
          type: string
        required: true
        description: Name of the tag. The name must be an exact match; wild-card deletion
          is not supported. Maximum size is 250 bytes. This field is required.
      responses:
        '200':
          description: OK
  /2.0/mlflow/registered-models/alias:
    post:
      operationId: modelregistryservicesetregisteredmodelalias
      requestBody:
        required: true
        description: Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the registered model. This field is required.
                alias:
                  type: string
                  description: Name of the alias. Maximum size depends on storage
                    backend. If an alias with this name already exists, its preexisting
                    value will be replaced by the specified `version`. All storage
                    backends are guaranteed to support alias name values up to 256
                    bytes in size. This field is required.
                version:
                  type: string
                  description: Model version number. This field is required.
              required:
              - name
              - alias
              - version
      responses:
        '200':
          description: OK
components:
  schemas:
    mlflowdataset:
      type: object
      properties:
        name:
          type: string
        digest:
          type: string
        source_type:
          type: string
        source:
          type: string
        schema:
          type: string
        profile:
          type: string
    mlflowdatasetinput:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/mlflowinputtag'
        dataset:
          $ref: '#/components/schemas/mlflowdataset'
    mlflowexperiment:
      type: object
      properties:
        experiment_id:
          type: string
        name:
          type: string
        artifact_location:
          type: string
        lifecycle_stage:
          type: string
        last_update_time:
          type: integer
          format: int64
        creation_time:
          type: integer
          format: int64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/mlflowexperimenttag'
    mlflowexperimenttag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowfileinfo:
      type: object
      properties:
        path:
          type: string
        is_dir:
          type: boolean
        file_size:
          type: integer
          format: int64
    mlflowinputtag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowmetric:
      type: object
      properties:
        key:
          type: string
        value:
          type: number
        timestamp:
          type: integer
          format: int64
        step:
          type: integer
          format: int64
    mlflowmodelversion:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        creation_timestamp:
          type: integer
          format: int64
        last_updated_timestamp:
          type: integer
          format: int64
        user_id:
          type: string
        current_stage:
          type: string
        description:
          type: string
        source:
          type: string
        run_id:
          type: string
        status:
          $ref: '#/components/schemas/mlflowmodelversionstatus'
        status_message:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/mlflowmodelversiontag'
        run_link:
          type: string
        aliases:
          type: array
          items:
            type: string
    mlflowmodelversiontag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowparam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowregisteredmodel:
      type: object
      properties:
        name:
          type: string
        creation_timestamp:
          type: integer
          format: int64
        last_updated_timestamp:
          type: integer
          format: int64
        user_id:
          type: string
        description:
          type: string
        latest_versions:
          type: array
          items:
            $ref: '#/components/schemas/mlflowmodelversion'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/mlflowregisteredmodeltag'
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/mlflowregisteredmodelalias'
    mlflowregisteredmodelalias:
      type: object
      properties:
        alias:
          type: string
        version:
          type: string
    mlflowregisteredmodeltag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowrun:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/mlflowruninfo'
        data:
          $ref: '#/components/schemas/mlflowrundata'
        inputs:
          $ref: '#/components/schemas/mlflowruninputs'
    mlflowrundata:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/mlflowmetric'
        params:
          type: array
          items:
            $ref: '#/components/schemas/mlflowparam'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/mlflowruntag'
    mlflowruninfo:
      type: object
      properties:
        run_id:
          type: string
        run_uuid:
          type: string
        run_name:
          type: string
        experiment_id:
          type: string
        user_id:
          type: string
        status:
          $ref: '#/components/schemas/mlflowrunstatus'
        start_time:
          type: integer
          format: int64
        end_time:
          type: integer
          format: int64
        artifact_uri:
          type: string
        lifecycle_stage:
          type: string
    mlflowruninputs:
      type: object
      properties:
        dataset_inputs:
          type: array
          items:
            $ref: '#/components/schemas/mlflowdatasetinput'
    mlflowruntag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    mlflowmodelversionstatus:
      type: string
      enum:
      - PENDING_REGISTRATION
      - FAILED_REGISTRATION
      - READY
    mlflowrunstatus:
      type: string
      enum:
      - RUNNING
      - SCHEDULED
      - FINISHED
      - FAILED
      - KILLED
    mlflowviewtype:
      type: string
      enum:
      - ACTIVE_ONLY
      - DELETED_ONLY
      - ALL
